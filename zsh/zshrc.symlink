# shortcut to this dotfiles path is $ZSHDOT
export ZSHDOT=$HOME/.dotfiles

# $ZSH variable is deprecated, use $ZSHDOT instead
export ZSH="$ZSHDOT"

# your project folder that we can `c [tab]` to
export PROJECTS=~/git

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# all of our zsh files
typeset -U config_files
config_files=($ZSHDOT/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# Oh My Zsh could be installed somewhere out of dotfiles directory tree, e.g.
# into ~/.oh-my-zsh; the configuration file created by Oh My Zsh installer
# should be moved as follows: {.zshrc => $ZSHDOT/zsh/oh-my-zshrc}.
if [[ -f $ZSHDOT/zsh/oh-my-zshrc ]]; then
    () {
      local ZSH="$HOME/.oh-my-zsh"
      source $ZSHDOT/zsh/oh-my-zshrc
      export OHMYZSH="$ZSH"
    } 
else 
  # initialize autocomplete here, otherwise functions won't be loaded
  autoload -U compinit
  compinit
fi				

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

# Notify existing users that they should migrate to another variable.
export ZSH='$ZSH is deprecated, use either $ZSHDOT or $OHMYZSH instead.'

# Better history
# Credits to https://coderwall.com/p/jpj_6q/zsh-better-history-searching-with-arrow-keys
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search # Up
bindkey "^[[B" down-line-or-beginning-search # Down
